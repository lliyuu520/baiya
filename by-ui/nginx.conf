user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;


events {
    worker_connections 1024;
}


http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    client_max_body_size 1024m;
    client_header_buffer_size 32k;
    client_body_buffer_size 8m;
    server_names_hash_bucket_size 512;
    proxy_headers_hash_max_size 51200;
    proxy_headers_hash_bucket_size 6400;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    sendfile on;

    keepalive_timeout 65;


    #gzip  on;
    # 恢复conf.d的包含
    include /etc/nginx/conf.d/*.conf;

    #  baiya 二级域名模块
    server {
        listen 80;
        # 使用更具体的server_name，避免与其他配置冲突
        server_name 192.168.81.117;

        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto http;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        add_header Pragma "no-cache";

        # API请求处理
        location /baiya-api/ {
            # 添加详细的访问日志
            access_log /var/log/nginx/api_access.log main;
            error_log /var/log/nginx/api_error.log notice;

            # 代理设置
            proxy_pass http://blue_backend/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # 超时设置
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;

            # 禁止缓存
            add_header Cache-Control "no-store, no-cache, must-revalidate";
            add_header Pragma "no-cache";
            expires 0;
        }

        # 静态资源处理
        location /baiya/ {
            # 禁止访问 . 开头的隐藏文件
            location ~ /\. {
                deny all;
            }

            # 修改为root指令
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /baiya/index.html;

            # 静态文件缓存设置
            expires 1d;
            add_header Cache-Control "public, no-transform";

            # 添加访问权限
            autoindex off;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Content-Type-Options "nosniff";
        }

        # 根路径重定向
        location = / {
            return 301 /baiya/;
        }

        # 其他请求返回404
        location / {
            return 404;
        }

        # 避免端点安全问题
        if ($request_uri ~ "/actuator") {
            return 403;
        }
    }


    upstream blue_backend {
        server localhost:8080;
    }
    upstream gree_backend {
        server localhost:8082;
    }


}

